line_number,log_level,content_type,priority,manual_annotation_needed,original_log,category,message
19370,UNKNOWN,stack_exception,1,True,Caused by: java.util.concurrent.ExecutionException: org.apache.catalina.LifecycleException: Failed to initialize component [org.apache.catalina.webresources.DirResourceSet@5d58c727],stack_exception,19370
16379,ERROR,stack_exception,1,True,"}"",unknown,github_issue,spring-projects/spring-security,15476,Unable to change error message on login failure,https://github.com/spring-projects/spring-security/issues/15476",stack_exception,16379
3501,UNKNOWN,stack_exception,1,True,at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-6.2.5.jar:6.2.5],stack_exception,3501
21275,UNKNOWN,stack_exception,1,True,at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1167),stack_exception,21275
1395,UNKNOWN,stack_exception,1,True,at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885),stack_exception,1395
18425,UNKNOWN,stack_exception,1,True,at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.24.jar:10.1.24],stack_exception,18425
14762,UNKNOWN,stack_exception,1,True,": new SQLStateSQLExceptionTranslator();"",unknown,github_issue,spring-projects/spring-boot,44869,Wrong jOOQ exception translator with empty db name,https://github.com/spring-projects/spring-boot/issues/44869",stack_exception,14762
11432,UNKNOWN,stack_exception,1,True,at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:267) ~[tomcat-embed-core-10.1.31.jar:10.1.31],stack_exception,11432
8307,UNKNOWN,stack_exception,1,True,at org.postgresql.jdbc.PgPreparedStatement.setObject(PgPreparedStatement.java:987) ~[postgresql-42.7.4.jar:42.7.4],stack_exception,8307
21285,UNKNOWN,stack_exception,1,True,at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51),stack_exception,21285
1564,ERROR,stack_exception,1,True,"java.lang.AssertionError:"",unknown,github_issue,jhipster/generator-jhipster,29641,persistent integration test failure,https://github.com/jhipster/generator-jhipster/issues/29641",stack_exception,1564
1676,ERROR,stack_exception,1,True,"[ERROR] See dump files (if any exist) [date].dump, [date]-jvmRun[N].dump and [date].dumpstream.",stack_exception,1676
13065,UNKNOWN,stack_exception,1,True,at org.springframework.boot.autoconfigure.security.oauth2.server.servlet.OAuth2AuthorizationServerConfiguration.<init>(OAuth2AuthorizationServerConfiguration.java:41),stack_exception,13065
14522,UNKNOWN,stack_exception,1,True,at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420),stack_exception,14522
16830,UNKNOWN,stack_exception,1,True,at org.springframework.security.oauth2.client.web.DefaultOAuth2AuthorizedClientManager.authorize(DefaultOAuth2AuthorizedClientManager.java:176) ~[spring-security-oauth2-client-6.3.1.jar:6.3.1],stack_exception,16830
2833,UNKNOWN,stack_exception,1,True,Halo  | 	at com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer._deserializeTypedForId(AsPropertyTypeDeserializer.java:170) ~[jackson-databind-2.18.3.jar:2.18.3],stack_exception,2833
21899,UNKNOWN,stack_exception,1,True,at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:67),stack_exception,21899
28098,UNKNOWN,stack_exception,1,True,at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(java.base@21.0.5/AbstractQueuedSynchronizer.java:1712),stack_exception,28098
8060,UNKNOWN,stack_exception,1,True,at com.mongodb.client.internal.MongoClientImpl.getStreamFactory(MongoClientImpl.java:304) ~[na:na],stack_exception,8060
1887,UNKNOWN,stack_exception,1,True,at org.springframework.util.ClassUtils.resolveClassName(ClassUtils.java:353) ~[spring-core-7.0.0-SNAPSHOT.jar:7.0.0-SNAPSHOT],stack_exception,1887
5203,UNKNOWN,stack_exception,1,True,at org.gradle.internal.event.ListenerBroadcast.dispatch(ListenerBroadcast.java:37),stack_exception,5203
10747,UNKNOWN,stack_exception,1,True,at org.springframework.boot.context.logging.LoggingApplicationListener.initialize(LoggingApplicationListener.java:298),stack_exception,10747
10181,UNKNOWN,stack_exception,1,True,at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:91) ~[spring-security-web-6.4.1.jar:6.4.1],stack_exception,10181
4871,UNKNOWN,stack_exception,1,True,at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.41.jar:10.1.41],stack_exception,4871
10760,UNKNOWN,stack_exception,1,True,at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190) ~[tomcat-embed-core-10.1.33.jar:10.1.33],stack_exception,10760
12568,UNKNOWN,stack_exception,1,True,at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93),stack_exception,12568
11376,ERROR,stack_exception,1,True,"String.format(ENCODING_ERROR_MESSAGE_TEMPLATE, """"Failed to select a JWK signing key""""));",stack_exception,11376
11678,UNKNOWN,stack_exception,1,True,at java.util.concurrent.ThreadPoolExecutor.runWorker(java.base@17.0.13/ThreadPoolExecutor.java:1122),stack_exception,11678
16362,UNKNOWN,stack_exception,1,True,at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[demo:6.2.3],stack_exception,16362
11057,UNKNOWN,stack_exception,1,True,at org.springframework.jdbc.core.JdbcTemplate$1.doInPreparedStatement(JdbcTemplate.java:733) ~[spring-jdbc-6.2.0.jar:6.2.0],stack_exception,11057
4344,UNKNOWN,stack_exception,1,True,jhipster-registry-1  | 	at org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory$Initializer.onStartup(UndertowServletWebServerFactory.java:508),stack_exception,4344
27311,UNKNOWN,stack_exception,1,True,at io.netty.resolver.dns.DnsAddressResolveContext.doSearchDomainQuery(DnsAddressResolveContext.java:99),stack_exception,27311
28205,UNKNOWN,stack_exception,1,True,at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:526),stack_exception,28205
4547,UNKNOWN,stack_exception,1,True,CustomAuthenticationEntryPoint customAuthenticationEntryPoint) throws Exception {,stack_exception,4547
21906,UNKNOWN,stack_exception,1,True,at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116),stack_exception,21906
549,UNKNOWN,stack_exception,1,True,at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1173),stack_exception,549
21850,UNKNOWN,stack_exception,1,True,at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.2.4.jar:6.2.4],stack_exception,21850
9418,UNKNOWN,stack_exception,1,True,at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:448),stack_exception,9418
21291,UNKNOWN,stack_exception,1,True,at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340),stack_exception,21291
13833,UNKNOWN,stack_exception,1,True,at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1351) ~[spring-beans-6.2.0-RC1.jar:6.2.0-RC1],stack_exception,13833
5292,UNKNOWN,stack_exception,1,True,at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24),stack_exception,5292
12583,UNKNOWN,stack_exception,1,True,at org.gradle.internal.metaobject.AbstractDynamicObject.getProperty(AbstractDynamicObject.java:62),stack_exception,12583
3608,UNKNOWN,stack_exception,1,True,at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1616) ~[spring-beans-6.2.5.jar:6.2.5],stack_exception,3608
455,UNKNOWN,stack_exception,1,True,at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1447),stack_exception,455
14365,UNKNOWN,stack_exception,1,True,at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:526),stack_exception,14365
776,UNKNOWN,stack_exception,1,True,"2025-07-25T01:25:42.263639,""<li>UnsupportedOperationException when creating 'scratch file' in IntelliJ IDEA <a href=""""https://redirect.github.com/spring-io/spring-javaformat/pull/441"""">#441</a></li>"",unknown,github_issue,spring-projects/spring-security,17437,Bump io-spring-javaformat from 0.0.46 to 0.0.47,https://github.com/spring-projects/spring-security/pull/17437",stack_exception,776
9755,UNKNOWN,stack_exception,1,True,at org.springframework.boot.SpringApplication.prepareEnvironment(SpringApplication.java:370),stack_exception,9755
805,UNKNOWN,stack_exception,1,True,at org.gradle.internal.execution.steps.TimeoutStep.execute(TimeoutStep.java:55),stack_exception,805
18611,UNKNOWN,stack_exception,1,True,"2025-07-25T02:01:07.660065,Hello I have the same problem when using a Custom ApplicationExceptionHandler extending ResponseEntityExceptionHandler. It seams that AccessDeniedException are automatically catched when using this type of handler but not AuthorizationDeniedException. It is possible to add a custom exception handler for AuthorizationDeniedException to bypass this problem but it should not be necessary.,unknown,github_issue,spring-projects/spring-security,15254,""Endpoint returns a 500, instead of 403 status code when the user does not have required permission"",https://github.com/spring-projects/spring-security/issues/15254",stack_exception,18611
13392,ERROR,stack_exception,1,True,"2025-07-25T00:30:31.183559,""@kridtakom, the Framework change should hopefully fix your problem. In the absence of an example that we can try ourselves, can you please test 6.2.6-SNAPSHOT against your app? It's available from https://repo.spring.io/snapshot."",unknown,github_issue,spring-projects/spring-boot,44988,Error dependency cycle between beans when upgrade spring boot version from 3.4.3 to 3.4.4,https://github.com/spring-projects/spring-boot/issues/44988",stack_exception,13392
13578,UNKNOWN,stack_exception,1,True,at org.springframework.boot.SpringApplication.handleRunFailure(SpringApplication.java:823),stack_exception,13578
26447,UNKNOWN,stack_exception,1,True,java.lang.IllegalStateException: already released ReferenceCounter@4efeb79f[r=0],stack_exception,26447
20819,UNKNOWN,stack_exception,1,True,at org.springframework.security.web.util.matcher.DispatcherTypeRequestMatcher.matches(DispatcherTypeRequestMatcher.java:72),stack_exception,20819
25140,ERROR,stack_exception,1,True,Picked up JAVA_TOOL_OPTIONS: -Djava.security.properties=/layers/paketo-buildpacks_bellsoft-liberica/java-security-properties/java-security.properties -XX:+ExitOnOutOfMemoryError -XX:MaxDirectMemorySize=10M -Xmx6082201K -XX:MaxMetaspaceSize=79862K -XX:ReservedCodeCacheSize=240M -Xss1M -XX:+UnlockDiagnosticVMOptions -XX:NativeMemoryTracking=summary -XX:+PrintNMTStatistics -Dorg.springframework.cloud.bindings.boot.enable=true,stack_exception,25140
23004,UNKNOWN,stack_exception,1,True,at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1716),stack_exception,23004
9658,ERROR,stack_exception,1,True,"2025-07-25T00:18:59.785273,I think this [sentence](https://docs.spring.io/spring-boot/reference/web/spring-security.html ) can be rephrased a little bit with including information that Boot's `/error` endpoint is also secured by default.,unknown,github_issue,spring-projects/spring-boot,45663,Improve documentation for configuring Spring Security with '/error',https://github.com/spring-projects/spring-boot/issues/45663",stack_exception,9658
21488,UNKNOWN,stack_exception,1,True,Caused by: com.nimbusds.jose.proc.BadJOSEException: JOSE header typ (type) logout+jwt not allowed,stack_exception,21488
1403,UNKNOWN,stack_exception,1,True,at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116),stack_exception,1403
2810,UNKNOWN,stack_exception,1,True,Halo  | 	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.119.Final.jar:4.1.119.Final],stack_exception,2810
2464,UNKNOWN,stack_exception,1,True,at liquibase.Scope.child(Scope.java:179),stack_exception,2464
7427,UNKNOWN,stack_exception,1,True,at org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59),stack_exception,7427
6848,ERROR,stack_exception,1,True,- Enhanced error and warning reporting with the Problems API,stack_exception,6848
5286,UNKNOWN,stack_exception,1,True,at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61),stack_exception,5286
8072,UNKNOWN,stack_exception,1,True,at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring_boot.exe:6.2.7],stack_exception,8072
4529,UNKNOWN,stack_exception,1,True,at org.springframework.boot.context.properties.bind.Binder.lambda$bindDataObject$6(Binder.java:488),stack_exception,4529
16349,UNKNOWN,stack_exception,1,True,at org.springframework.beans.factory.aot.BeanInstanceSupplier.lambda$get$2(BeanInstanceSupplier.java:225) ~[na:na],stack_exception,16349
26599,UNKNOWN,stack_exception,1,True,at ch.qos.logback.core.pattern.PatternLayoutBase.caterForLegacyConverterMaps(PatternLayoutBase.java:111),stack_exception,26599
24872,UNKNOWN,stack_exception,1,True,at org.springframework.boot.context.event.EventPublishingRunListener.multicastInitialEvent(EventPublishingRunListener.java:136),stack_exception,24872
2812,UNKNOWN,stack_exception,1,True,"Halo  | Caused by: java.lang.IllegalArgumentException: The class with org.springframework.security.web.authentication.switchuser.SwitchUserGrantedAuthority and name of org.springframework.security.web.authentication.switchuser.SwitchUserGrantedAuthority is not in the allowlist. If you believe this class is safe to deserialize, please provide an explicit mapping using Jackson annotations or by providing a Mixin. If the serialization is only done by a trusted source, you can also enable default typing. See https://github.com/spring-projects/spring-security/issues/4370 for details",stack_exception,2812
603,UNKNOWN,stack_exception,1,True,at java.base/java.lang.reflect.Method.invoke(Method.java:569),stack_exception,603
19016,UNKNOWN,stack_exception,1,True,"|_     Mono.doOnSuccess ⇢ at org.springframework.security.web.server.ObservationWebFilterChainDecorator$ObservationWebFilter.wrapFilter(ObservationWebFilterChainDecorator.java:211)"",unknown,github_issue,spring-projects/spring-security,15243,NullPointerException when GrantedAuthority.getAuthority() returns null,https://github.com/spring-projects/spring-security/issues/15243",stack_exception,19016
10603,UNKNOWN,stack_exception,1,True,at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.33.jar:10.1.33],stack_exception,10603
2776,UNKNOWN,stack_exception,1,True,at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiateWithFactoryMethod(SimpleInstantiationStrategy.java:88),stack_exception,2776
22158,UNKNOWN,stack_exception,1,True,at org.springframework.util.Assert.state(Assert.java:76) ~[spring-core-6.1.16.jar:6.1.16],stack_exception,22158
3901,UNKNOWN,stack_exception,1,True,at org.springframework.util.Assert.notNull(Assert.java:181) ~[spring-core-6.2.5.jar:6.2.5],stack_exception,3901
25402,UNKNOWN,stack_exception,1,True,at org.graalvm.nativeimage.builder/com.oracle.svm.core.jni.functions.JNIFunctions.GetFieldID(JNIFunctions.java:461),stack_exception,25402
5325,UNKNOWN,stack_exception,1,True,"2025-07-25T23:21:48.016546,""<li><a href=""""https://redirect.github.com/springdoc/springdoc-openapi/issues/2834"""">#2834</a> - java.lang.ClassNotFoundException: kotlin.reflect.full.KClasses when upgrade from 2.7.0 to 2.8.0</li>"",unknown,github_issue,jhipster/generator-jhipster,28450,build(deps): bump org.springdoc:springdoc-openapi-starter-webmvc-api from 2.7.0 to 2.8.2 in /generators/server/resources,https://github.com/jhipster/generator-jhipster/pull/28450",stack_exception,5325
3655,UNKNOWN,stack_exception,1,True,at java.base/java.lang.reflect.Method.invoke(Method.java:573) ~[na:na],stack_exception,3655
17786,UNKNOWN,stack_exception,1,True,"2025-07-25T00:38:48.889056,""Spring Boot isn't involved at all at that level. Without any evidence of a Spring boot bug, I'm going to close this one. If the version of Hibernate makes no difference, Spring Data JPA is the next most likely cause. If you want to pursue this by opening a Spring Data JPA issue, please create a complete yet minimal sample before doing so."",unknown,github_issue,spring-projects/spring-boot,44506,""Exception thrown in jpa query with @Param(""""example"""") parameter after Spring Boot upgrade to 3.4.3 from 3.4.2"",https://github.com/spring-projects/spring-boot/issues/44506",stack_exception,17786
2150,UNKNOWN,stack_exception,1,True,at org.springframework.boot.loader.launch.Launcher.launch(Launcher.java:102),stack_exception,2150
21207,UNKNOWN,stack_exception,1,True,at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227),stack_exception,21207
18689,UNKNOWN,stack_exception,1,True,at java.base@24/java.lang.invoke.LambdaForm$DMH/sa346b79c.invokeStaticInit(LambdaForm$DMH),stack_exception,18689
17303,UNKNOWN,stack_exception,1,True,at reactor.core.publisher.FluxPublish$PubSubInner.request(FluxPublish.java:874),stack_exception,17303
10748,UNKNOWN,stack_exception,1,True,at org.springframework.boot.docker.compose.lifecycle.DockerComposeListener.onApplicationEvent(DockerComposeListener.java:53),stack_exception,10748
15936,ERROR,stack_exception,1,True,"2025-07-25T01:57:02.549771,""When using Apache Tomcat, adding headers from different threads causes nasty race conditions that (because of Tomcat's instance recycling) can durably break the inner workings of their `org.apache.tomcat.util.http.MimeHeaders` class, potentially leading to errors in completely unrelated requests. I already experienced duplicate and missing response headers. As with most race conditions, these specific issues are almost impossible to reproduce."",unknown,github_issue,spring-projects/spring-security,15510,Race condition in HeaderWriterFilter when using asynchronous processing,https://github.com/spring-projects/spring-security/issues/15510",stack_exception,15936
10659,UNKNOWN,stack_exception,1,True,at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103),stack_exception,10659
22398,UNKNOWN,stack_exception,1,True,at org.springframework.boot.testcontainers.service.connection.elasticsearch.ElasticsearchContainerConnectionDetailsFactoryTests.connectionCanBeMadeToElasticsearchContainer(ElasticsearchContainerConnectionDetailsFactoryTests.java:61),stack_exception,22398
1256,ERROR,stack_exception,1,True,2025-05-29T18:01:11.395+01:00 ERROR 62676 --- [notaries] [           main] [                                                 ] o.s.t.w.reactive.server.ExchangeResult   : Request details for assertion failure:,stack_exception,1256
1701,ERROR,stack_exception,1,True,"[INFO] Tests run: 49, Failures: 0, Errors: 0, Skipped: 0"",unknown,github_issue,jhipster/generator-jhipster,29641,persistent integration test failure,https://github.com/jhipster/generator-jhipster/issues/29641",stack_exception,1701
19478,UNKNOWN,stack_exception,1,True,at org.apache.catalina.core.StandardService.startInternal(StandardService.java:415) ~[tomcat-embed-core-10.1.36.jar:10.1.36],stack_exception,19478
10094,UNKNOWN,stack_exception,1,True,- [x] org.springframework.security.oauth2.client.ClientAuthorizationRequiredException,stack_exception,10094
12350,UNKNOWN,stack_exception,1,True,at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975),stack_exception,12350
27150,UNKNOWN,stack_exception,1,True,at io.netty.handler.codec.dns.DatagramDnsQueryEncoder.encode(DatagramDnsQueryEncoder.java:58),stack_exception,27150
14059,UNKNOWN,stack_exception,1,True,at org.springframework.boot.loader.launch.JarLauncher.main(JarLauncher.java:40),stack_exception,14059
25570,ERROR,stack_exception,1,True,"Unexpected error"",unknown,github_issue,spring-projects/spring-boot,43634,build doc task failed,https://github.com/spring-projects/spring-boot/issues/43634",stack_exception,25570
16010,ERROR,stack_exception,1,True,native-query-error3-review-1  | 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601),stack_exception,16010
12322,UNKNOWN,stack_exception,1,True,at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:385),stack_exception,12322
10834,UNKNOWN,stack_exception,1,True,at org.springframework.boot.docker.compose.lifecycle.DockerComposeListener.onApplicationEvent(DockerComposeListener.java:53),stack_exception,10834
16577,UNKNOWN,stack_exception,1,True,at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:527) ~[jakarta.jakartaee-api-10.0.0.jar:na],stack_exception,16577
10637,UNKNOWN,stack_exception,1,True,at org.springframework.boot.docker.compose.core.DockerCli.lambda$new$0(DockerCli.java:65),stack_exception,10637
20887,INFO,database_exception,3,True,[INFO] |  |  +- org.mongodb:bson:jar:5.0.1:compile,database_exception,20887
28517,UNKNOWN,database_exception,3,True,Downloaded from central: https://repo.maven.apache.org/maven2/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar (20 kB at 259 kB/s),database_exception,28517
2703,INFO,database_exception,3,True,2025-07-23T15:09:09.230+01:00  INFO 1224 --- [databaseTest] [           main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration),database_exception,2703
4381,UNKNOWN,database_exception,3,True,"""""sha256:ffe9dbc2272dfb5e675ac6a536f2eeceb7af43be6eab515b9c6f2dd4947ff5c8"""",",database_exception,4381
19051,UNKNOWN,database_exception,3,True,spring.data.mongodb.password | Login password of the mongo server. Cannot be set with URI.,database_exception,19051
4955,UNKNOWN,database_exception,3,True,Container blog-mysql-1  Waiting,database_exception,4955
9299,INFO,database_exception,3,True,[INFO] |  |     +- com.google.code.findbugs:jsr305:jar:3.0.2:compile,database_exception,9299
2015,UNKNOWN,database_exception,3,True,"""""devDatabaseType"""": """"oracle"""",",database_exception,2015
22632,UNKNOWN,database_exception,3,True,"2025-07-25T02:07:32.001634,""Hi @jzheaux , thanks for your feedback! I'll get back to working on this issue soon. But I'm still a little worried about the correctness of the chosen solution - if the `authorize` method is marked as default, it turns out that all lambdas will implement the `check` method, is this a problem and how easy will it be to switch all lambdas to the `authorize` method?"",unknown,github_issue,spring-projects/spring-security,14846,AuthorizationManager should return AuthorizationResult,https://github.com/spring-projects/spring-security/pull/14846",database_exception,22632
24424,UNKNOWN,database_exception,3,True,"2025-07-25T00:49:03.897910,""That's a very opinionated statement that we can't really make. If Spring Data JDBC fits well with your data model, we would certainly advise anyone to use it."",unknown,github_issue,spring-projects/spring-boot,43899,Buggy Hibernate,https://github.com/spring-projects/spring-boot/issues/43899",database_exception,24424
20174,INFO,database_exception,3,True,[INFO] |  |     \- org.mongodb:bson-record-codec:jar:5.0.1:runtime,database_exception,20174
4463,UNKNOWN,database_exception,3,True,"2025-07-25T23:17:21.870416,""<li><a href=""""https://github.com/eslint/eslint/commit/93c78a5c58edb7ead9bff87c874d2ff9b824ec04""""><code>93c78a5</code></a> docs: Add instructions for pnpm compat (<a href=""""https://redirect.github.com/eslint/eslint/issues/19422"""">#19422</a>)</li>"",unknown,github_issue,jhipster/generator-jhipster,28681,build(deps-dev): bump eslint from 9.20.0 to 9.20.1 in /generators/angular/resources in the eslint group,https://github.com/jhipster/generator-jhipster/pull/28681",database_exception,4463
13687,UNKNOWN,database_exception,3,True,at app//org.springframework.boot.jdbc.DataSourceBuilder.build(DataSourceBuilder.java:184),database_exception,13687
20419,INFO,database_exception,3,True,[INFO] +- org.springframework.session:spring-session-data-mongodb:jar:3.3.5:compile,database_exception,20419
28818,UNKNOWN,database_exception,3,True,} else if (bean instanceof JdbcTemplate template) {,database_exception,28818
2419,UNKNOWN,database_exception,3,True,"2025-07-25T01:30:55.186849,* Database client wrapper that automatically adds the authenticated user ID to all SQL queries.,unknown,github_issue,spring-projects/spring-security,17119,Spring Webflux + Spring Security Interaction - Why does the WebFilter run twice?,https://github.com/spring-projects/spring-security/issues/17119",database_exception,2419
17561,UNKNOWN,database_exception,3,True,"However, sometime between Spring Boot 3.3.5 and 3.4.3 a change was made so that default value `create-drop` for `spring.jpa.hibernate.ddl-auto` was applied to all data sources whether they were embedded or not (if at least one of them was embedded), which is dangerous behaviour and can lead to unexpected data loss in production databases."",unknown,github_issue,spring-projects/spring-boot,44516,""When an application contains multiple DataSource beans, EntityManagerFactoryBuilder will default ddl-auto to a value that may only be appropriate for the primary DataSource"",https://github.com/spring-projects/spring-boot/issues/44516",database_exception,17561
7983,UNKNOWN,database_exception,3,True,"- [findUserEntityOrCreateAndSave](https://github.com/spring-projects/spring-security/blob/ddca7dc629bfd6ea0fd5e3d0279764fd0a456d09/web/src/main/java/org/springframework/security/web/webauthn/management/Webauthn4JRelyingPartyOperations.java#L337) should be `this.userEntities.findByUsername(username)` so no user is ever saved (that should only happen on registering a credential"",unknown,github_issue,spring-projects/spring-security,16385,PublicKeyCredentialUserEntityRepository saves `anonymousUser`,https://github.com/spring-projects/spring-security/issues/16385",database_exception,7983
13877,UNKNOWN,database_exception,3,True,"2025-07-25T01:51:13.153501,""Thanks for the feedback @wilkinsona. Other than specifying the origin (e.g. Bean name) is there anything else you can think of that could help improve/expedite the troubleshooting of multiple """"any request"""" filter chain issue?"",unknown,github_issue,spring-projects/spring-security,15874,Make it easier to determine where a filter chain has been defined,https://github.com/spring-projects/spring-security/issues/15874",database_exception,13877
3753,UNKNOWN,database_exception,3,True,"2025-07-25T00:10:01.510534,You DO NOT need to raise an issue for a managed dependency version upgrade as there's a semi-automatic process for checking managed dependencies for new versions before a release. BUT pull requests for upgrades that are more involved than just a version property change are still most welcome.,unknown,github_issue,spring-projects/spring-boot,46129,Create spring-boot-data-r2dbc module,https://github.com/spring-projects/spring-boot/issues/46129",database_exception,3753
4798,UNKNOWN,database_exception,3,True,Container blog-mysql-1  Started,database_exception,4798
2496,INFO,database_exception,3,True,2025-07-23T15:08:43.741+01:00  INFO 1224 --- [databaseTest] [           main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 216 ms. Found 0 JPA repository interfaces.,database_exception,2496
15082,UNKNOWN,database_exception,3,True,"2025-07-25T01:54:20.800939,""It could be that the documentation should be modified to suggest a configuration that doesn't fall into the second case. However, I wonder if the documentation needs to be improved in some way to make this clearer or if this is simply something you missed when reading the documentation and modifying the code from there? I feel the current example and text in the docs make the use case fairly clear, but I imagine it could be confusing if the code is modified from there. Can you provide some feedback on this and whether you find the docs clear or confusing and in need of improvement?"",unknown,github_issue,spring-projects/spring-security,15683,Disabling credentials erasure on custom AuthenticationManager is not working,https://github.com/spring-projects/spring-security/issues/15683",database_exception,15082
8029,WARN,database_exception,3,True,2024-12-13T16:34:47.326-03:00  WARN 63645 --- [  restartedMain] org.hibernate.orm.incubating             : HHH90006001: Encountered incubating setting [hibernate.type.preferred_instant_jdbc_type].  See javadoc on corresponding `org.hibernate.cfg.AvailableSettings` constant for details.,database_exception,8029
8031,WARN,database_exception,3,True,2024-12-13T16:34:47.328-03:00  WARN 63645 --- [  restartedMain] org.hibernate.orm.incubating             : HHH90006001: Encountered incubating setting [hibernate.type.preferred_instant_jdbc_type].  See javadoc on corresponding `org.hibernate.cfg.AvailableSettings` constant for details.,database_exception,8031
1558,INFO,database_exception,3,True,2025-05-29T18:01:11.392+01:00  INFO 62676 --- [notaries] [ream-1721626063] [                                                 ] c.c.n.config.PostgreSqlTestContainer     : STDERR: 2025-05-29 17:01:11.390 UTC [89] DETAIL:  Key (id)=(e7bf0d30-733f-454e-bdf3-ab76f1f4a9d9) already exists.,database_exception,1558
1837,UNKNOWN,database_exception,3,True,"2025-07-25T00:06:35.451780,""Spring Batch 6 introduces support for """"resource less"""" infrastructure. With this mode, a database is not required and this could be helpful for those who do not need it and are currently forced to add an in-memory database for that purpose.",database_exception,1837
2495,INFO,database_exception,3,True,2025-07-23T15:08:43.451+01:00  INFO 1224 --- [databaseTest] [           main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.,database_exception,2495
1977,UNKNOWN,database_exception,3,True,"2025-07-25T00:07:31.374607,Applications running on MongoDB replica sets that require secondary or custom read routing.,unknown,github_issue,spring-projects/spring-boot,46261,Add configuration properties for MongoDB's read and write consistency,https://github.com/spring-projects/spring-boot/issues/46261",database_exception,1977
4575,UNKNOWN,database_exception,3,True,"2025-07-25T23:18:18.900089,""I would also like to [invert the 'ApplicationType' and 'EntityType' Inheritance hierarchy](https://github.com/jhipster/generator-jhipster/issues/28235) within the generator, so that for example ClientGenerator 'Application' Object won't be able to access 'xChangelog', 'serviceClass', 'databaseType', etc. properties anymore. V9 is the right occasion for this kind of change."",unknown,github_issue,jhipster/generator-jhipster,28631,v9 release plan.,https://github.com/jhipster/generator-jhipster/issues/28631",database_exception,4575
5228,UNKNOWN,database_exception,3,True,"2025-07-25T23:21:00.271043,""<td><a href=""""https://github.com/angular/angular-cli/commit/2c9d7368fc30f3488152e35ac468db5f2a9432f2""""><img src=""""https://img.shields.io/badge/2c9d7368f-feat-blue"""" alt=""""feat - 2c9d7368f"""" /></a></td>"",unknown,github_issue,jhipster/generator-jhipster,28489,build(deps): bump the angular group in /generators/angular/resources with 2 updates,https://github.com/jhipster/generator-jhipster/pull/28489",database_exception,5228
4112,UNKNOWN,database_exception,3,True,> Using build cache volume 'pack-cache-5cbe5692dbc4.build',database_exception,4112
25613,UNKNOWN,database_exception,3,True,"If you want an embedded database (H2, HSQL or Derby), please put it on the classpath.",database_exception,25613
9674,UNKNOWN,database_exception,3,True,|         |    \--- org.mongodb:mongodb-driver-core:5.4.0 -> 5.5.0,database_exception,9674
24850,UNKNOWN,database_exception,3,True,"2025-07-25T00:50:32.442363,""This indeed doesn't play nice with wrapper drivers but such use cases could be updated to rely on database product name instead. I can contribute that if you agree with that direction.",database_exception,24850
962,UNKNOWN,database_exception,3,True,"2025-07-25T22:58:33.616839,""<td><a href=""""https://github.com/angular/angular-cli/commit/0ab1ddf632b7305db28a2f87f5c6b099a44669f6""""><img src=""""https://img.shields.io/badge/0ab1ddf63-feat-blue"""" alt=""""feat - 0ab1ddf63"""" /></a></td>"",unknown,github_issue,jhipster/generator-jhipster,29673,build(deps): bump the angular group across 1 directory with 4 updates,https://github.com/jhipster/generator-jhipster/pull/29673",database_exception,962
8253,UNKNOWN,database_exception,3,True,import org.springframework.security.authentication.ott.JdbcOneTimeTokenService;,database_exception,8253
16556,UNKNOWN,database_exception,3,True,"2025-07-25T01:58:14.861637,""Just a note for those following along: Based on feedback, I've pushed changes to the PR (gh-15437) with an updated API for the interceptor that takes advantage of [`attributes`](https://github.com/spring-projects/spring-framework/issues/32027) for configuring the `clientRegistrationId` on a per-request basis. This effectively consolidates everything to a single primary usage example:"",unknown,github_issue,spring-projects/spring-security,15437,Add `RestClient` interceptor,https://github.com/spring-projects/spring-security/pull/15437",database_exception,16556
4355,UNKNOWN,database_exception,3,True,"""""sha256:ccc797d21d04dbc7f7b9029ebcad60158dc4a08268bc9df65be9bad96a6516ed"""",",database_exception,4355
13685,UNKNOWN,database_exception,3,True,at app//org.springframework.boot.jdbc.DataSourceBuilder$ReflectionDataSourceProperties.getMethod(DataSourceBuilder.java:581),database_exception,13685
1980,UNKNOWN,database_exception,3,True,"Settings that can be configured in both a URI or an individual configuration property have been a source of unwanted complexity in the past. https://github.com/spring-projects/spring-boot/issues/6424 is an example of this. The issue of whether Mongo's URI or the specific individual properties should take precedence has been raised in https://github.com/spring-projects/spring-boot/issues/44712. I feel that we need to sort that out before we add any more properties that can also be configured through the URI."",unknown,github_issue,spring-projects/spring-boot,46261,Add configuration properties for MongoDB's read and write consistency,https://github.com/spring-projects/spring-boot/issues/46261",database_exception,1980
2651,DEBUG,database_exception,3,True,2025-07-23T15:09:00.468+01:00 DEBUG 1224 --- [databaseTest] [           main] com.zaxxer.hikari.HikariConfig           : scheduledExecutor...............none,database_exception,2651
26820,UNKNOWN,database_exception,3,True,"2025-07-25T00:54:22.088458,""implementation 'org.springframework.data:spring-data-mongodb:4.4.0'",database_exception,26820
8741,WARN,database_exception,3,True,2024-12-13T16:50:50.037-03:00  WARN 73600 --- [  restartedMain] org.hibernate.orm.incubating             : HHH90006001: Encountered incubating setting [hibernate.type.preferred_instant_jdbc_type].  See javadoc on corresponding `org.hibernate.cfg.AvailableSettings` constant for details.,database_exception,8741
25554,UNKNOWN,database_exception,3,True,"2025-07-25T00:53:26.303959,""I don't really see how this will improve the performance that much. Calling `getUrlPrefixes()` shouldn't be expensive, and if we did want to optimize it we could make the result a `static final` constant which would save the one call to `List.of(...)`."",unknown,github_issue,spring-projects/spring-boot,43638,feat: Optimize DatabaseDriver fromJdbcUrl method with caching,https://github.com/spring-projects/spring-boot/pull/43638",database_exception,25554
23792,INFO,database_exception,3,True,"2025-07-25T02:09:09.360715,""Closing due to lack of requested feedback. If you would like us to look at this issue, please provide the requested information and we will re-open the issue."",unknown,github_issue,spring-projects/spring-security,14749,DefaultRelyingPartyRegistrationResolver should provide the end user to resolve URL with custom URL templates,https://github.com/spring-projects/spring-security/issues/14749",database_exception,23792
4469,UNKNOWN,database_exception,3,True,"2025-07-25T23:17:26.587432,""<li><a href=""""https://github.com/eslint/eslint/commit/93c78a5c58edb7ead9bff87c874d2ff9b824ec04""""><code>93c78a5</code></a> docs: Add instructions for pnpm compat (<a href=""""https://redirect.github.com/eslint/eslint/issues/19422"""">#19422</a>) (Nicholas C. Zakas)</li>"",unknown,github_issue,jhipster/generator-jhipster,28677,build(deps-dev): bump eslint from 9.20.0 to 9.20.1 in /generators/vue/resources in the eslint group,https://github.com/jhipster/generator-jhipster/pull/28677",database_exception,4469
9750,UNKNOWN,database_exception,3,True,"2025-07-25T00:19:02.999753,""\--- org.springframework.boot:spring-boot-starter-data-mongodb -> 3.5.0",database_exception,9750
23709,UNKNOWN,database_exception,3,True,"- @ConditionalOnSingleCandidate (types: org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate; SearchStrategy: all) did not find any beans (OnBeanCondition)"",unknown,github_issue,spring-projects/spring-boot,43987,JdbcClient should be avaiable when Spring JDBC and Jdbc Drivers in the classpath,https://github.com/spring-projects/spring-boot/issues/43987",database_exception,23709
18107,UNKNOWN,database_exception,3,True,Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)'],database_exception,18107
2605,INFO,database_exception,3,True,"2025-07-25T00:08:43.775134,""2025-07-23T15:08:28.306+01:00  INFO 1224 --- [databaseTest] [           main] c.e.d.DatabaseTestApplication            : Starting DatabaseTestApplication using Java 23.0.2 with PID 1224 (C:\Users\USER\Desktop\spring Apps\databaseTest\databaseTest\target\classes started by USER in C:\Users\USER\Desktop\spring Apps\databaseTest\databaseTest)",database_exception,2605
6499,UNKNOWN,database_exception,3,True,"org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration]"",unknown,github_issue,spring-projects/spring-boot,45938,Spring 3.5.0 app doesnt start sometimes (@ConditionalOnMissingBean not considered),https://github.com/spring-projects/spring-boot/issues/45938",database_exception,6499
8950,UNKNOWN,database_exception,3,True,"2025-07-25T23:31:10.315365,""<td><a href=""""https://github.com/angular/angular-cli/commit/292a4b7c2f62828606c42258db524341f4a6391e""""><img src=""""https://img.shields.io/badge/292a4b7c2-feat-blue"""" alt=""""feat - 292a4b7c2"""" /></a></td>"",unknown,github_issue,jhipster/generator-jhipster,27969,build(deps): bump the angular group across 1 directory with 6 updates,https://github.com/jhipster/generator-jhipster/pull/27969",database_exception,8950
2609,INFO,database_exception,3,True,2025-07-23T15:08:50.557+01:00  INFO 1224 --- [databaseTest] [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http),database_exception,2609
23703,DEBUG,database_exception,3,True,"2025-07-25T00:47:28.892256,""That shouldn't be the case. Perhaps you could look at the condition evaluation report (launch your app with `--debug`) to identify why `JdbcClientAutoConfiguration` wasn't used.",database_exception,23703
3824,UNKNOWN,database_exception,3,True,"2025-07-25T23:14:51.254019,""<td><a href=""""https://github.com/angular/angular/commit/1cd3a7db83e1d05a31d23324676420b614cdabe2""""><img src=""""https://img.shields.io/badge/1cd3a7db83-feat-blue"""" alt=""""feat - 1cd3a7db83"""" /></a></td>"",unknown,github_issue,jhipster/generator-jhipster,28820,build(deps): bump the angular group in /generators/angular/resources with 2 updates,https://github.com/jhipster/generator-jhipster/pull/28820",database_exception,3824
9793,INFO,database_exception,3,True,"2025-07-25T01:43:58.737901,""Closing due to lack of requested feedback. If you would like us to look at this issue, please provide the requested information and we will re-open the issue."",unknown,github_issue,spring-projects/spring-security,16322,[build] Settings.gradle's logic to handle different buildFile name could result in phantom subproject,https://github.com/spring-projects/spring-security/issues/16322",database_exception,9793
17707,UNKNOWN,database_exception,3,True,"2025-07-25T01:59:40.263434,As a (dirty) workaround for this issue we have implemented a custom implementation for `SessionRegistry` that searches the right principal in the map without relying on object identity.,unknown,github_issue,spring-projects/spring-security,15346,OIDC logout not working for JPA/JDBC OAuth2AuthorizationService because DefaultSaml2AuthenticatedPrincipal does not implement equality,https://github.com/spring-projects/spring-security/issues/15346",database_exception,17707
9255,UNKNOWN,database_exception,3,True,"2025-07-25T23:33:13.957743,""<li><a href=""""https://github.com/capricorn86/happy-dom/commit/6ff0d8f9bb959234d36b4da7d8616dbfb2ea052f""""><code>6ff0d8f</code></a> fix: <a href=""""https://redirect.github.com/capricorn86/happy-dom/issues/1565"""">#1565</a> Validate that object is of type Blob in FileReader.readAsArrayBu...</li>"",unknown,github_issue,jhipster/generator-jhipster,27872,build(deps-dev): bump happy-dom from 14.12.3 to 15.11.4 in /generators/vue/resources,https://github.com/jhipster/generator-jhipster/pull/27872",database_exception,9255
9697,UNKNOWN,database_exception,3,True,"2025-07-25T00:19:02.999104,""Thanks for reporting the issue. It looks like an upgrade happened in Spring Data [a couple of weeks ago](https://github.com/spring-projects/spring-data-mongodb/commit/2b8b59aec25ee1d70c2a9f0049afe2849494e002) and we had already moved to track only patch releases at that point.",database_exception,9697
26774,UNKNOWN,database_exception,3,True,"replacedBy(""""org.springframework.boot:spring-boot-starter-log4j2"""", """"Use Log4j2 instead of Logback"""")",database_exception,26774
13669,UNKNOWN,database_exception,3,True,"2025-07-25T01:51:10.252882,Thanks for being willing to provide that @xardbaiz but I think that is off-topic from this issue. I'm going to hide the comment so it doesn't interrupt the flow.,unknown,github_issue,spring-projects/spring-security,15877,Add `OAuth2AuthorizedClientManager` autoconfiguration without `spring-boot-starter-web` dependency,https://github.com/spring-projects/spring-security/issues/15877",database_exception,13669
1747,UNKNOWN,database_exception,3,True,"2025-07-25T22:59:23.804278,""<td><a href=""""https://github.com/angular/angular-cli/commit/d6f594fe0f8f21d9c0e2abedb5c8433a1aa5c157""""><img src=""""https://img.shields.io/badge/d6f594fe0-feat-blue"""" alt=""""feat - d6f594fe0"""" /></a></td>"",unknown,github_issue,jhipster/generator-jhipster,29633,build(deps): bump the angular group in /generators/angular/resources with 3 updates,https://github.com/jhipster/generator-jhipster/pull/29633",database_exception,1747
3762,UNKNOWN,database_exception,3,True,"be a solution, or there may be a way to solve it that you hadn't considered."",unknown,github_issue,spring-projects/spring-boot,46128,Create spring-boot-data-jdbc module,https://github.com/spring-projects/spring-boot/issues/46128",database_exception,3762
24299,UNKNOWN,database_exception,3,True,"2025-07-25T02:10:31.128892,""Need to add an OAuth2AuthorizedClientService implementation that gets OAuth2AuthorizedClient from the cache. In some cases this is better than InMemoryOAuth2AuthorizedClientService or JdbcOAuth2AuthorizedClientService. For example, the application runs on several instances, each instance can access the OAuth2AuthorizedClient in a shared distributed cache, such as Hazelcast or Redis."",unknown,github_issue,spring-projects/spring-security,14662,Support retrieving OAuth2AuthorizedClient from cache.,https://github.com/spring-projects/spring-security/issues/14662",database_exception,24299
11045,DEBUG,database_exception,3,True,"2025-07-25T01:45:27.270905,""2024-12-07T08:54:52.074+01:00 DEBUG 53186 --- [demo] [           main] o.s.security.acls.jdbc.AclClassIdUtils   : Unable to obtain the class id type",database_exception,11045
2536,DEBUG,database_exception,3,True,"2025-07-23T15:09:00.464+01:00 DEBUG 1224 --- [databaseTest] [           main] com.zaxxer.hikari.HikariConfig           : poolName........................""""HikariPool-1""""",database_exception,2536
9774,UNKNOWN,database_exception,3,True,"implementation(""""org.springframework.boot:spring-boot-starter-data-mongodb"""")",database_exception,9774
4108,UNKNOWN,database_exception,3,True,> Pulled builder image 'paketobuildpacks/builder-noble-java-tiny@sha256:9bd26063ca9f0d9d607dec815baaf288e1e5545e23901411bb0db5a6bd1d2e15',database_exception,4108
11887,WARN,database_exception,3,True,"2025-04-29 16:39:59.309  WARN 96336 --- [  restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceCreatorAutoConfiguration$Dbcp2DataSourceCreatorConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceCreatorAutoConfiguration$Dbcp2DataSourceCreatorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected/applied to a currently created BeanPostProcessor [myBatisMapperFactoryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies/advisors. If this bean does not have to be post-processed, declare it with ROLE_INFRASTRUCTURE.",database_exception,11887
9393,UNKNOWN,database_exception,3,True,"2025-07-25T00:18:46.676622,""Also, the failure doesn't occur at runtime of the native image, but at the compilation time, which lead me to think this is a bug in native image. Please report this to the [GraalVM team](https://github.com/oracle/graal) as this is unlikely to be a bug in Boot. Feel free to link back to this issue."",unknown,github_issue,spring-projects/spring-boot,45676,Native Build fails after upgrading from 3.4.6 to 3.5.0,https://github.com/spring-projects/spring-boot/issues/45676",database_exception,9393
2541,DEBUG,database_exception,3,True,2025-07-23T15:09:00.480+01:00 DEBUG 1224 --- [databaseTest] [           main] com.zaxxer.hikari.HikariConfig           : threadFactory...................internal,database_exception,2541
2532,DEBUG,database_exception,3,True,2025-07-23T15:09:00.440+01:00 DEBUG 1224 --- [databaseTest] [           main] com.zaxxer.hikari.HikariConfig           : metricRegistry..................none,database_exception,2532
2655,DEBUG,database_exception,3,True,"2025-07-23T15:09:00.484+01:00 DEBUG 1224 --- [databaseTest] [           main] com.zaxxer.hikari.HikariConfig           : username........................""""root""""",database_exception,2655
14514,UNKNOWN,database_exception,3,True,"... 156 more"",unknown,github_issue,spring-projects/spring-boot,44873,when upgrading from 3.4.3 to 3.4.4 the dbHealthContributor suddenly tries to add integration MessageChannel,https://github.com/spring-projects/spring-boot/issues/44873",database_exception,14514
2580,DEBUG,database_exception,3,True,"2025-07-23T15:09:02.186+01:00 DEBUG 1224 --- [databaseTest] [onnection-adder] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - After adding stats (total=8/10, idle=7/10, active=1, waiting=0)",database_exception,2580
44,UNKNOWN,database_exception,3,True,"replacedBy(""""org.springframework.boot:spring-boot-starter-webmvc"""", """"spring-boot-starter-web is deprecated"""")"",unknown,github_issue,spring-projects/spring-boot,46522,Deprecate renamed starters,https://github.com/spring-projects/spring-boot/issues/46522",database_exception,44
15754,DEBUG,database_exception,3,True,2025-03-13T11:15:30.082+02:00 DEBUG 57764 --- [           main] o.s.b.f.s.DefaultListableBeanFactory     : Creating shared instance of singleton bean 'org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration$HikariDataSourceMetricsConfiguration',database_exception,15754
18259,UNKNOWN,database_exception,3,True,com					       jsonassert-1.5.3.jar			  spring-aspects-6.2.3.jar		   spring-jdbc-6.2.3.jar,database_exception,18259
6512,UNKNOWN,database_exception,3,True,"2025-07-25T23:25:58.562068,""<p><img src=""""https://github.com/user-attachments/assets/6e3db43b-59e5-44e6-b950-061c0dc30fe4"""" alt=""""Screenshot 2024-12-12 at 22 21 52"""" /></p>"",unknown,github_issue,jhipster/generator-jhipster,28223,build(deps): bump react-toastify from 10.0.6 to 11.0.0 in /generators/react/resources,https://github.com/jhipster/generator-jhipster/pull/28223",database_exception,6512
2504,INFO,database_exception,3,True,2025-07-23T15:08:54.980+01:00  INFO 1224 --- [databaseTest] [           main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.6.18.Final,database_exception,2504
1212,INFO,database_exception,3,True,"2025-05-29T18:01:11.245+01:00  INFO 62676 --- [notaries] [ream-1721626063] [                                                 ] c.c.n.config.PostgreSqlTestContainer     : STDERR: 2025-05-29 17:01:11.244 UTC [89] STATEMENT:  INSERT INTO user_profile (id, username, email, age, created_at) VALUES ($1, $2, $3, $4, $5) RETURNING id",database_exception,1212
10359,UNKNOWN,database_exception,3,True,"2025-07-25T23:41:08.710961,""<li><a href=""""https://github.com/apache/maven-javadoc-plugin/commit/db6d7f6ec355dd26c7f4841ad2c63ff4df456422""""><code>db6d7f6</code></a> [MJAVADOC-811] javadoc.bat fails to execute on Windows when project is not on...</li>"",unknown,github_issue,jhipster/generator-jhipster,27478,build(deps): bump org.apache.maven.plugins:maven-javadoc-plugin from 3.10.0 to 3.10.1 in /generators/server/resources,https://github.com/jhipster/generator-jhipster/pull/27478",database_exception,10359
18071,UNKNOWN,database_exception,3,True,"Having said that, I don't want to argue a point based on opinion and that's why I think opening an issue to track community feedback and need is a good compromise. Based on the misunderstanding on my part (clarified by seeing a sample), I think we can actually use this issue for that. I will adjust the title to make it clearer what we're talking about here, which is a way to handle highly concurrent requests for the `client_credentials` grant type. Sound good?"",unknown,github_issue,spring-projects/spring-security,15295,Highly concurrent requests with `client_credentials` cause duplicate access token requests,https://github.com/spring-projects/spring-security/issues/15295",database_exception,18071
15864,UNKNOWN,database_exception,3,True,"2025-07-25T00:35:24.108963,""I'm not sure that they would. We see the use of Testcontainers or Docker Compose as a way of running/testing your app in a more production-like way. In such a situation, the expectation is that schema initialisation is handled just as it is in production. For that case, the proposed change would be a breaking one as it would become necessary to change configuration otherwise two attempts would be made to initialise the schema."",unknown,github_issue,spring-projects/spring-boot,44702,Introduce a new DatabaseInitializationMode correspond to AutoConfigureTestDatabase.Replace.NON_TEST,https://github.com/spring-projects/spring-boot/issues/44702",database_exception,15864
2600,INFO,database_exception,3,True,"2025-07-25T01:31:35.125331,""> Hi, @wapkch, thanks for this PR! Looking at #16012, I believe the ask is to be able to have separate places from which to draw information for the RP and AP metadata. As such, I think let's begin with implementing `AssertingPartyMetadataRepository` (so `JdbcAssertingPartyMetadataRepository`). You should be able to preserve most of what you've written, just staying focused on the asserting party. Are you able to make these changes?"",unknown,github_issue,spring-projects/spring-security,17077,Add JdbcAssertingPartyMetadataRepository,https://github.com/spring-projects/spring-security/pull/17077",database_exception,2600
18223,UNKNOWN,database_exception,3,True,"All in all, I think this conversation has reached its course. If you want to amend your PR as I've suggested above, then please do so and I'll be happy to review it. Perhaps some more refinement will occur based on the code. And it is a first good step in what you're trying to achieve and that doesn't prevent us to keep refining it based on the community's feedback."",unknown,github_issue,spring-projects/spring-boot,44465,Add support for auto-configuring SimpleMessageListenerContainer,https://github.com/spring-projects/spring-boot/pull/44465",database_exception,18223
9841,UNKNOWN,database_exception,3,True,"2025-07-25T23:37:00.662911,""With **development** profile I can see that Jhipster *forces* me to use Docker for the database, WHY ?"",unknown,github_issue,jhipster/generator-jhipster,27685,Inconsistent README docker is mandatory to launch the app ! Distributed app with many services can't operate !,https://github.com/jhipster/generator-jhipster/issues/27685",database_exception,9841
8693,DEBUG,database_exception,3,True,2024-12-13T16:50:51.222-03:00 DEBUG 73600 --- [  restartedMain] c.m.myapp.config.DatabaseConfiguration   : H2 database is available on port 18080,database_exception,8693
2505,INFO,database_exception,3,True,2025-07-23T15:08:55.767+01:00  INFO 1224 --- [databaseTest] [           main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled,database_exception,2505
2550,DEBUG,database_exception,3,True,"2025-07-23T15:09:01.712+01:00 DEBUG 1224 --- [databaseTest] [l-1:housekeeper] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Pool stats (total=1/10, idle=0/10, active=1, waiting=0)",database_exception,2550
20179,INFO,database_exception,3,True,[INFO] |  \- org.mongodb:mongodb-driver-sync:jar:5.0.1:compile,database_exception,20179
2545,INFO,database_exception,3,True,2025-07-23T15:09:00.502+01:00  INFO 1224 --- [databaseTest] [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...,database_exception,2545
7078,UNKNOWN,database_exception,3,True,"2025-07-25T23:29:38.265538,""I'm selecting H2 in memory database, why does JHipster seemed to setup my development project to trigger Docker? I'm not using any external system, this is just a straight forward simple jhipster project so it shouldn't even try to find Docker at all when I'm not even using it."",unknown,github_issue,jhipster/generator-jhipster,28038,JHipster setup and try to find Docker when it is not used ,https://github.com/jhipster/generator-jhipster/issues/28038",database_exception,7078
9749,UNKNOWN,database_exception,3,True,"2025-07-25T00:19:02.999732,""Yeah, I think we should upgrade. However, that doesn't explain the mismatched versions."",unknown,github_issue,spring-projects/spring-boot,45660,Spring Boot 3.5's dependency management should have been upgraded to MongoDB 5.5.0,https://github.com/spring-projects/spring-boot/issues/45660",database_exception,9749
2635,DEBUG,database_exception,3,True,2025-07-23T15:09:00.419+01:00 DEBUG 1224 --- [databaseTest] [           main] com.zaxxer.hikari.HikariConfig           : healthCheckRegistry.............none,database_exception,2635
1734,UNKNOWN,database_exception,3,True,"2025-07-25T00:05:11.528647,""Among the other things, Spring Boot offers convenient dependency management via starter modules and auto-configuration. However, for Testcontainers support at development time, both features are missing. If I have a project with Spring Data JDBC and PostgreSQL, I have to know which dependencies to add to the classpath to get a PostgreSQL Testcontainer up and running (at least 3 extra dependencies are needed).",database_exception,1734
2549,INFO,database_exception,3,True,2025-07-23T15:09:01.597+01:00  INFO 1224 --- [databaseTest] [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.,database_exception,2549
8325,UNKNOWN,database_exception,3,True,"2025-07-25T01:43:35.845542,expires_at  TIMESTAMP    NOT NULL,unknown,github_issue,spring-projects/spring-security,16344,Fix for JdbcOneTimeTokenService cleanupExpiredTokens failing with PostgreSQL,https://github.com/spring-projects/spring-security/pull/16344",database_exception,8325
2611,INFO,database_exception,3,True,2025-07-23T15:08:50.628+01:00  INFO 1224 --- [databaseTest] [           main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.42],database_exception,2611
17793,UNKNOWN,connection_issue,2,True,"2025-07-25T00:38:50.036542,""Looking at the change, while it seems possible to restart driver connections, there's a lot of reliance on driver internals. Having lifecycle methods in the driver itself would create a more sustainable approach that doesn't require us to know the driver's internals."",unknown,github_issue,spring-projects/spring-boot,44505,Add Lifecycle/CRaC support for Cassandra,https://github.com/spring-projects/spring-boot/pull/44505",connection_issue,17793
2398,UNKNOWN,connection_issue,2,True,"2025-07-25T00:08:28.979073,The reflective call is made [here](https://github.com/spring-projects/spring-boot/blob/3168b594fde60e600c22786e33c55d07479f7d86/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/metadata/HikariDataSourcePoolMetadata.java#L59). It's been there since we introduced DataSource metrics in Spring Boot 1.2. It's not clear to me what has changed in Spring Boot 4 to cause it to fail now.,unknown,github_issue,spring-projects/spring-boot,46214,jdbc.connections.active and jdbc.connections.idle metrics are not available when using Hikari in a native image,https://github.com/spring-projects/spring-boot/issues/46214",connection_issue,2398
8930,UNKNOWN,connection_issue,2,True,fun createIpv6Resolver(): AddressResolverGroup<InetSocketAddress> {,connection_issue,8930
15680,UNKNOWN,connection_issue,2,True,"2025-07-25T00:35:13.029521,""Ideally, when both, URI and authentication, are configured, `spring.data.mongodb.username` overrides what is specified through the connection string."",unknown,github_issue,spring-projects/spring-boot,44712,Enable combined MongoDB URI and username/password properties usage,https://github.com/spring-projects/spring-boot/issues/44712",connection_issue,15680
20260,INFO,connection_issue,2,True,[INFO] |     \- jakarta.websocket:jakarta.websocket-client-api:jar:2.1.1:compile,connection_issue,20260
24739,UNKNOWN,connection_issue,2,True,"2025-07-25T02:10:59.990009,""@AutoConfiguration(before = ReactiveSecurityAutoConfiguration.class, after = RSocketMessagingAutoConfiguration.class)",connection_issue,24739
1794,UNKNOWN,connection_issue,2,True,"2025-07-25T00:05:14.696732,""> connection factory sub-class that requires further configuration, for"",unknown,github_issue,spring-projects/spring-boot,46365,Make it possible to inject desired subclass of ActiveMQConnectionFactory into the configuration,https://github.com/spring-projects/spring-boot/issues/46365",connection_issue,1794
1827,UNKNOWN,connection_issue,2,True,"Still think this improvement is a good one though.  I can imagine several scenarios where you'd want to define your own dataSource that still uses the JdbcConnectionDetails abstraction."",unknown,github_issue,spring-projects/spring-boot,46314,Extract JdbcConnectionDetails from DataSource conditionality,https://github.com/spring-projects/spring-boot/pull/46314",connection_issue,1827
2700,DEBUG,connection_issue,2,True,2025-07-23T15:09:02.447+01:00 DEBUG 1224 --- [databaseTest] [onnection-adder] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@695b3b2a,connection_issue,2700
1793,UNKNOWN,connection_issue,2,True,"2025-07-25T00:05:14.696709,""On Thu, Jul 10, 2025 at 10:04 AM Andy Wilkinson ***@***.***>"",unknown,github_issue,spring-projects/spring-boot,46365,Make it possible to inject desired subclass of ActiveMQConnectionFactory into the configuration,https://github.com/spring-projects/spring-boot/issues/46365",connection_issue,1793
10958,INFO,connection_issue,2,True,"2025-05-06T11:33:14.760+01:00  INFO 89849 --- [demo-service] [           main] org.demo.service.config.ServiceConfig    : External: [{""""test-res"""":{""""uri"""":""""r2dbc:sqlserver://sa@localhost:1433/test"""",""""connectTimeout"""":null,""""database"""":null,""""driver"""":null,""""host"""":null,""""lockWaitTimeout"""":null,""""password"""":""""test"""",""""port"""":null,""""protocol"""":null,""""ssl"""":null,""""statementTimeout"""":null,""""user"""":null}}]"",unknown,github_issue,spring-projects/spring-boot,45371,ConfigurationProperties annotation: external java class does not load configuration values,https://github.com/spring-projects/spring-boot/issues/45371",connection_issue,10958
2511,DEBUG,connection_issue,2,True,2025-07-23T15:09:00.386+01:00 DEBUG 1224 --- [databaseTest] [           main] com.zaxxer.hikari.HikariConfig           : connectionInitSql...............none,connection_issue,2511
3763,UNKNOWN,connection_issue,2,True,"2025-07-25T01:35:33.968323,""For the moment we have a work-around where we set a proxy on all of the JVM, but that also touches unrelated connections, so is not ideal.",connection_issue,3763
2685,DEBUG,connection_issue,2,True,2025-07-23T15:09:02.074+01:00 DEBUG 1224 --- [databaseTest] [onnection-adder] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@553b5552,connection_issue,2685
1803,UNKNOWN,connection_issue,2,True,"2025-07-25T00:05:14.697849,""On Thu, Jul 10, 2025 at 10:50 AM Andy Wilkinson ***@***.***>"",unknown,github_issue,spring-projects/spring-boot,46365,Make it possible to inject desired subclass of ActiveMQConnectionFactory into the configuration,https://github.com/spring-projects/spring-boot/issues/46365",connection_issue,1803
24413,DEBUG,connection_issue,2,True,"> 10:51:15.472 DEBUG PooledConnectionProvider - [9892e210, L:/10.9.248.21:56812 - R:/10.9.27.29:12750] Channel cleaned, now: 0 active connections, 1 inactive connections and 0 pending acquire requests.",connection_issue,24413
23349,UNKNOWN,connection_issue,2,True,if (properties.getConnectTimeout() != null) {,connection_issue,23349
2551,DEBUG,connection_issue,2,True,2025-07-23T15:09:01.714+01:00 DEBUG 1224 --- [databaseTest] [onnection-adder] com.zaxxer.hikari.pool.PoolBase          : HikariPool-1 - Attempting to create/setup new connection (ae232d5a-3150-4cf1-b4a6-65da63d39d65),connection_issue,2551
13204,UNKNOWN,connection_issue,2,True,"2025-07-25T00:30:10.305443,Parameter 0 of constructor in com.example.demo.custom.CustomPGClient required a bean of type 'com.example.demo.custom.CustomPGConnectionDetails' that could not be found.,unknown,github_issue,spring-projects/spring-boot,45010,Use thread's context class loader for spring factories loader on connection details factory,https://github.com/spring-projects/spring-boot/issues/45010",connection_issue,13204
5113,INFO,connection_issue,2,True,"2025-07-25T00:13:03.295651,""2025-06-17 09:57:11.828 INFO  --- [tomcat-handler-77] - [request-method=GET, request-uri=/v1/api/*, x-correlation-id=*, applicationName=imt-service] - i.p.g.s.j.c.c.SslJwtPerformanceEventListener : Starting TCP connection to api.*.com",connection_issue,5113
2259,UNKNOWN,connection_issue,2,True,if (GlobalOpenTelemetry.get() != OpenTelemetry.noop() && otlpTracingConnectionDetails.isEmpty()) {,connection_issue,2259
9382,UNKNOWN,connection_issue,2,True,"override fun doResolveAll(address: InetSocketAddress?, promise: Promise<MutableList<InetSocketAddress>>?) {",connection_issue,9382
23395,UNKNOWN,connection_issue,2,True,import java.net.InetSocketAddress;,connection_issue,23395
11481,UNKNOWN,connection_issue,2,True,- rSocketAuthenticationManagerPostProcessor: defined by method 'rSocketAuthenticationManagerPostProcessor' in class path resource [org/springframework/security/config/annotation/rsocket/ReactiveObservationConfiguration.class],connection_issue,11481
19066,UNKNOWN,connection_issue,2,True,"2025-07-25T00:40:58.306415,> We cannot do that as there are many users relying on the current behavior.,unknown,github_issue,spring-projects/spring-boot,44382,Documentation bug: Inconsistency in Mongo connection setup,https://github.com/spring-projects/spring-boot/issues/44382",connection_issue,19066
9359,UNKNOWN,connection_issue,2,True,return object : AddressResolverGroup<InetSocketAddress>() {,connection_issue,9359
21370,UNKNOWN,connection_issue,2,True,<connection/>,connection_issue,21370
1998,UNKNOWN,connection_issue,2,True,Connection: close,connection_issue,1998
23158,UNKNOWN,connection_issue,2,True,public Duration getOrDefaultReadTimeout() {,connection_issue,23158
10332,UNKNOWN,connection_issue,2,True,"2025-07-25T23:40:51.106116,Please note that the network inspection capabilities are in active development.,unknown,github_issue,jhipster/generator-jhipster,27494,chore(deps): update dependency node to v20.18.0,https://github.com/jhipster/generator-jhipster/pull/27494",connection_issue,10332
3125,UNKNOWN,connection_issue,2,True,"2025-07-25T01:33:30.660577,""<li>Suppress &quot;Unable to rollback against JDBC Connection&quot; in case of timeout (connection closed) <a href=""""https://redirect.github.com/spring-projects/spring-framework/issues/34714"""">#34714</a></li>"",unknown,github_issue,spring-projects/spring-security,16959,Bump org.springframework:spring-framework-bom from 6.2.5 to 6.2.6,https://github.com/spring-projects/spring-security/pull/16959",connection_issue,3125
13175,UNKNOWN,connection_issue,2,True,"Additionally, I extended `DockerComposeProperties` with a new flag (defaulting to `false`) that reflects this setting. The `DockerComposeServiceConnectionsApplicationListener` now uses this flag when creating the `ConnectionDetailsFactories`.",connection_issue,13175
13207,UNKNOWN,connection_issue,2,True,"2025-07-25T00:30:10.305626,import org.springframework.stereotype.Service;,unknown,github_issue,spring-projects/spring-boot,45010,Use thread's context class loader for spring factories loader on connection details factory,https://github.com/spring-projects/spring-boot/issues/45010",connection_issue,13207
1458,UNKNOWN,connection_issue,2,True,"2025-07-25T01:28:40.587357,""When configuring WebSocket message security via Spring Security's XML support, a `CsrfChannelInterceptor` is configured but the default CSRF handler in the web layer is generated by the `XorCsrfTokenRequestAttributeHandler`, so STOMP `CONNECT` messages that present the XOR'd CSRF value are rejected as a mismatch."",unknown,github_issue,spring-projects/spring-security,17260,<websocket-message-broker> should use XorCsrfChannelInterceptor by default,https://github.com/spring-projects/spring-security/issues/17260",connection_issue,1458
1109,UNKNOWN,connection_issue,2,True,"2025-07-25T00:03:29.925920,""if (connectionFactory instanceof org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory) {",connection_issue,1109
19068,UNKNOWN,connection_issue,2,True,"For long term, you should consider breaking change to implementation that fragment overrides whole - it is IMHO more logical than current implementation when one fragment out of many overrides whole but others not"",unknown,github_issue,spring-projects/spring-boot,44382,Documentation bug: Inconsistency in Mongo connection setup,https://github.com/spring-projects/spring-boot/issues/44382",connection_issue,19068
7401,UNKNOWN,connection_issue,2,True,"2025-07-25T00:16:42.540911,""On comparing the source code for both the jars, it seems that the functionality to cache in JarFileUrlKey is not present in 3.1.x. but present in 3.3.x. So based on the profiler results I assumed the caching mechanism might be causing an issue."",unknown,github_issue,spring-projects/spring-boot,45790,Enable/disable JarFile caching in JarUrlConnection,https://github.com/spring-projects/spring-boot/issues/45790",connection_issue,7401
13185,UNKNOWN,connection_issue,2,True,"That being said, this stuff is quite hard to test so please let me know if you find things still aren't working as expected."",unknown,github_issue,spring-projects/spring-boot,45014,ConnectionDetailsFactories should use the context class loader to load factories,https://github.com/spring-projects/spring-boot/pull/45014",connection_issue,13185
15713,UNKNOWN,connection_issue,2,True,"2025-07-25T00:35:14.083617,org.springframework.boot.ignore: true # Ignore third_party_service_database for application JDBC connection,unknown,github_issue,spring-projects/spring-boot,44711,spring-boot-docker-compose: ignore healthchecks for services labeled with org.springframework.boot.ignore,https://github.com/spring-projects/spring-boot/issues/44711",connection_issue,15713
9938,UNKNOWN,connection_issue,2,True,"2025-07-25T01:44:20.462930,or using @Qualifier to identify the bean that should be consumedEnsure that your compiler is configured to use the '-parameters' flag.You may need to update both your build tool settings as well as your IDE.(See https://github.com/spring-projects/spring-framework/wiki/Upgrading-to-Spring-Framework-6.x#parameter-name-retention)`,unknown,github_issue,spring-projects/spring-security,16299, Bean Conflict Between `webSocketAuthorizationManagerPostProcessor` and `objectPostProcessor` in Spring Security Configuration,https://github.com/spring-projects/spring-security/issues/16299",connection_issue,9938
21051,INFO,connection_issue,2,True,[INFO] |  +- org.htmlunit:htmlunit-websocket-client:jar:4.6.0:test,connection_issue,21051
22857,UNKNOWN,connection_issue,2,True,"2025-07-25T00:46:25.877437,""You can't set a property to null in `application.properties`. What you've done instead is set them to the string `""""null""""`. This means that you're still ignoring the `JdbcConnectionDetails`. If the connection details are available, you should use them instead of the properties as they are intended to override any property-based configuration.",connection_issue,22857
2624,DEBUG,connection_issue,2,True,2025-07-23T15:09:00.388+01:00 DEBUG 1224 --- [databaseTest] [           main] com.zaxxer.hikari.HikariConfig           : connectionTestQuery.............none,connection_issue,2624
12249,UNKNOWN,connection_issue,2,True,+import org.springframework.web.socket.config.annotation.EnableWebSocket;,connection_issue,12249
2577,DEBUG,connection_issue,2,True,2025-07-23T15:09:02.110+01:00 DEBUG 1224 --- [databaseTest] [onnection-adder] com.zaxxer.hikari.pool.PoolBase          : HikariPool-1 - Attempting to create/setup new connection (5e63014a-1b2e-41ec-946a-aef813a33000),connection_issue,2577
9370,UNKNOWN,connection_issue,2,True,"?.let { InetSocketAddress(it, port) }",connection_issue,9370
11486,UNKNOWN,connection_issue,2,True,"2025-07-25T01:46:32.314175,""Consider marking one of the beans as @Primary, updating the consumer to accept multiple beans, or using @Qualifier to identify the bean that should be consumed"",unknown,github_issue,spring-projects/spring-security,16161,Resolve ObjectPostProcessor collisions between RSocket and WebFlux security configuration,https://github.com/spring-projects/spring-security/issues/16161",connection_issue,11486
8635,UNKNOWN,connection_issue,2,True,"java.security.Security.setProperty(""""networkaddress.preferIPv6Addresses"""", """"true"""")",connection_issue,8635
15632,UNKNOWN,connection_issue,2,True,socket.connection.setup.timeout.ms = 10000,connection_issue,15632
22403,UNKNOWN,connection_issue,2,True,"2025-07-25T02:07:21.565389,""<li><em>content-aggregator</em>: Clear timeout and keep-alive settings on git HTTP connections that don't use custom agent (<a href=""""https://gitlab.com/antora/antora/issues/1101"""">#1101</a>)</li>"",unknown,github_issue,spring-projects/spring-security,14854,Bump antora from 3.2.0-alpha.2 to 3.2.0-alpha.4,https://github.com/spring-projects/spring-security/pull/14854",connection_issue,22403
2977,UNKNOWN,connection_issue,2,True,"2025-07-25T23:05:09.825110,""* **Transaction/Commit timing (Less likely, but possible):** Investigate if there's a subtle timing issue related to transaction commits that affects Liquibase's schema inspection. Even though `ddl-auto=update` creates the tables, perhaps Liquibase is running the diff at a point where those changes are not yet visible to its connection."",unknown,github_issue,jhipster/generator-jhipster,29330,The ./gradlew liquibaseDiffChangelog -PrunList=diffLog command doesn't generate the changesets,https://github.com/jhipster/generator-jhipster/issues/29330",connection_issue,2977
20464,DEBUG,connection_issue,2,True,"DEBUG 3733950 - o.apac.hc.clie.http.wire                                     : http-outgoing-0 << """"Keep-Alive: timeout=60[\r][\n]""""",connection_issue,20464
2667,DEBUG,connection_issue,2,True,2025-07-23T15:09:01.774+01:00 DEBUG 1224 --- [databaseTest] [onnection-adder] com.zaxxer.hikari.pool.PoolBase          : HikariPool-1 - Attempting to create/setup new connection (acef92bd-e8f1-4692-964b-aaa99431f12c),connection_issue,2667
15770,DEBUG,connection_issue,2,True,2025-03-13T11:15:30.089+02:00 DEBUG 57764 --- [nnection closer] com.zaxxer.hikari.pool.PoolBase          : HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@36bd60ef: (connection evicted),connection_issue,15770
7579,UNKNOWN,connection_issue,2,True,.connectTimeout(Duration.ofMinutes(5)),connection_issue,7579
3262,UNKNOWN,connection_issue,2,True,"2025-07-25T01:34:09.811600,""I believe what is often missed is the fact that in a high-security environment we cannot just add CAs at the JVM level. In such an environment a CA is often only applicable for a specific outbound http connection, it must not apply to _any_ outbound http connection that the application makes."",unknown,github_issue,spring-projects/spring-security,16920,Support custom CAs in oauth login,https://github.com/spring-projects/spring-security/issues/16920",connection_issue,3262
7595,UNKNOWN,connection_issue,2,True,"@Profile(""""my-connectTimeout-customizer"""")",connection_issue,7595
13206,UNKNOWN,connection_issue,2,True,"2025-07-25T00:30:10.305529,""When defining our own `ConnectionDetails` and `ConnectionDetailsFactory` in a project that uses `spring-boot-devtools`, the `ConnectionDetails` instance created by the factory fails to be autowired. This happens because the class loader used by the factory differs from the one used to wire the bean."",unknown,github_issue,spring-projects/spring-boot,45010,Use thread's context class loader for spring factories loader on connection details factory,https://github.com/spring-projects/spring-boot/issues/45010",connection_issue,13206
23363,UNKNOWN,connection_issue,2,True,factory.setReadTimeout(properties.getReadTimeout());,connection_issue,23363
2691,DEBUG,connection_issue,2,True,2025-07-23T15:09:02.140+01:00 DEBUG 1224 --- [databaseTest] [onnection-adder] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@728a8664,connection_issue,2691
1105,UNKNOWN,connection_issue,2,True,import org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory;,connection_issue,1105
20470,DEBUG,connection_issue,2,True,"DEBUG 3733950 - o.apac.hc.clie.http.wire                                     : http-outgoing-0 >> """"Connection: keep-alive[\r][\n]""""",connection_issue,20470
18106,INFO,connection_issue,2,True,2025-02-28T15:46:42.291+08:00  INFO 34080 --- [hr-management] [           main] org.hibernate.orm.connections.pooling    : HHH10001005: Database info:,connection_issue,18106
7566,UNKNOWN,connection_issue,2,True,.connectTimeout(Duration.ofMinutes(5)),connection_issue,7566
6497,UNKNOWN,connection_issue,2,True,"org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration,",connection_issue,6497
1780,UNKNOWN,connection_issue,2,True,"We have an existing pattern in Boot where we provide `*Configurer` classes as beans. These configurers can be used to define a custom bean that's largely configured as the auto-configuration would have done. `ArtemisConnectionFactoryFactory` is a bit like one of our existing public `*Configurer` classes in that it creates something using configuration properties. On the ActiveMQ side, we also have `ActiveMQConnectionFactoryConfigurer` although it's currently package-private."",unknown,github_issue,spring-projects/spring-boot,46365,Make it possible to inject desired subclass of ActiveMQConnectionFactory into the configuration,https://github.com/spring-projects/spring-boot/issues/46365",connection_issue,1780
5122,INFO,connection_issue,2,True,"2025-07-25T00:13:03.295743,""2025-06-17 09:57:11.828 INFO  --- [tomcat-handler-77] - [request-method=GET, request-uri=/v1/api/*, x-correlation-id=*, applicationName=imt-service] - i.p.g.s.j.c.c.SslJwtPerformanceEventListener : Starting TCP connection to api.*.com",connection_issue,5122
8835,UNKNOWN,connection_issue,2,True,val remoteAddress = connection.channel().remoteAddress(),connection_issue,8835
3678,UNKNOWN,connection_issue,2,True,"2025-07-25T00:09:43.413568,You DO NOT need to raise an issue for a managed dependency version upgrade as there's a semi-automatic process for checking managed dependencies for new versions before a release. BUT pull requests for upgrades that are more involved than just a version property change are still most welcome.,unknown,github_issue,spring-projects/spring-boot,46144,Create spring-boot-websocket module,https://github.com/spring-projects/spring-boot/issues/46144",connection_issue,3678
8964,UNKNOWN,connection_issue,2,True,".map { InetSocketAddress(it, inetSocketAddress.port) }",connection_issue,8964
5227,UNKNOWN,connection_issue,2,True,at app//org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149),connection_issue,5227
8654,UNKNOWN,connection_issue,2,True,"override fun doResolve(address: InetSocketAddress?, promise: Promise<InetSocketAddress>?) {",connection_issue,8654
13178,UNKNOWN,connection_issue,2,True,"2025-07-25T00:30:07.639101,""Thanks very much for the PR @lengors. I think it's possible to argue that this is a bug, however, it feels a little risky to fix in a patch release so I'm keeping the target to 3.5."",unknown,github_issue,spring-projects/spring-boot,45014,ConnectionDetailsFactories should use the context class loader to load factories,https://github.com/spring-projects/spring-boot/pull/45014",connection_issue,13178
1806,UNKNOWN,connection_issue,2,True,"> those that do would be left with things no better than they are now."",unknown,github_issue,spring-projects/spring-boot,46365,Make it possible to inject desired subclass of ActiveMQConnectionFactory into the configuration,https://github.com/spring-projects/spring-boot/issues/46365",connection_issue,1806
19606,UNKNOWN,connection_issue,2,True,"2025-07-25T00:41:54.428221,""I'm not sure that I see the connection between your question and the Spring Data JPA documentation to which you've linked. `JpaBaseConfiguration` is a base class for auto-configuration of JPA infrastructure. There are no public concrete sub-classes of `JpaBaseConfiguration` so you'll have to sub-class it anyway. At that point, you could make your implementation of `getVendorProperties()` public if you wish."",unknown,github_issue,spring-projects/spring-boot,44327,Make getVendorProperties() in JpaBaseConfiguration public,https://github.com/spring-projects/spring-boot/issues/44327",connection_issue,19606
1788,UNKNOWN,connection_issue,2,True,"2025-07-25T00:05:14.695864,""If this is instead implemented properly by you, we could have a default class resolver bean in spring-boot that is marked with a fitting @ConditionalXxx annotation that allows us mortals to provide our own override."",unknown,github_issue,spring-projects/spring-boot,46365,Make it possible to inject desired subclass of ActiveMQConnectionFactory into the configuration,https://github.com/spring-projects/spring-boot/issues/46365",connection_issue,1788
9688,UNKNOWN,connection_issue,2,True,"The called method's class, com.mongodb.internal.connection.StreamFactoryHelper, is available from the following locations:",connection_issue,9688
15683,UNKNOWN,connection_issue,2,True,"> Ideally, when both, URI and authentication, are configured, `spring.data.mongodb.username` overrides what is specified through the connection string",connection_issue,15683
1676,UNKNOWN,connection_issue,2,True,"There's either a problem on the server side where it's sending a malformed response or there's a problem on the client side where it's failing to read a valid response. Given that the problem appears to occur with two different HTTP clients (the JDK's HttpURLConnection and the Apache HTTP client), a server-side problem would appear to be the most likely.",connection_issue,1676
16947,UNKNOWN,connection_issue,2,True,"2025-07-25T00:36:33.583360,""SpringBoot provides a default implementation of the `org.springframework.boot.ssl.SslManagerBundle` interface (`DefaultSslManagerBundle`) that allows to specify a `SslBundleKey` (referencing the private key within the associated `KeyStore`) to be used for establishing an SSL connection. This feature, added in SpringBoot 3.1.0, is really appreciable as it simplifies a lot the selection of the private key to be used during SSL handshake.",connection_issue,16947
3908,UNKNOWN,connection_issue,2,True,"be a solution, or there may be a way to solve it that you hadn't considered."",unknown,github_issue,spring-projects/spring-boot,46097,Create spring-boot-rsocket module,https://github.com/spring-projects/spring-boot/issues/46097",connection_issue,3908
5844,UNKNOWN,connection_issue,2,True,"2025-07-25T23:23:22.518478,""<li><strong>useTimeoutPoll</strong>: Only start by default at client  -  by <a href=""""https://github.com/antfu""""><code>@​antfu</code></a> <a href=""""https://github.com/vueuse/vueuse/commit/a5fb05cb""""><!-- raw HTML omitted -->(a5fb0)<!-- raw HTML omitted --></a></li>"",unknown,github_issue,jhipster/generator-jhipster,28372,build(deps): bump @vueuse/core from 12.2.0 to 12.3.0 in /generators/vue/resources,https://github.com/jhipster/generator-jhipster/pull/28372",connection_issue,5844
2669,DEBUG,connection_issue,2,True,2025-07-23T15:09:01.801+01:00 DEBUG 1224 --- [databaseTest] [onnection-adder] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@315a17c9,connection_issue,2669
15811,DEBUG,connection_issue,2,True,2025-03-13T11:15:30.089+02:00 DEBUG 57764 --- [nnection closer] com.zaxxer.hikari.pool.PoolBase          : HikariPool-1 - Closing connection org.postgresql.jdbc.PgConnection@b753c39: (connection evicted),connection_issue,15811
5123,INFO,connection_issue,2,True,"2025-06-17 09:57:11.838 INFO  --- [tomcat-handler-77] - [request-method=GET, request-uri=/v1/api/*, x-correlation-id=*, applicationName=imt-service] - i.p.g.s.j.c.c.SslJwtPerformanceEventListener : Starting SSL handshake"",unknown,github_issue,spring-projects/spring-boot,45978,Very Slow initial TCP connections with SpringBoot 3.4,https://github.com/spring-projects/spring-boot/issues/45978",connection_issue,5123
20279,DEBUG,connection_issue,2,True,"DEBUG 3733950 - o.apac.hc.clie.http.wire                                     : http-outgoing-0 << """"Connection: keep-alive[\r][\n]""""",connection_issue,20279
2597,DEBUG,connection_issue,2,True,"2025-07-23T15:09:02.488+01:00 DEBUG 1224 --- [databaseTest] [onnection-adder] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Connection not added, stats (total=10/10, idle=10/10, active=0, waiting=0)",connection_issue,2597
16378,UNKNOWN,connection_issue,2,True,"Reason: Failed to determine a suitable R2DBC Connection URL`"",unknown,github_issue,spring-projects/spring-boot,44658,SpringBoot Data PostgresSql R2DBC GraalVM native image can't connect to a database,https://github.com/spring-projects/spring-boot/issues/44658",connection_issue,16378
19933,INFO,connection_issue,2,True,[INFO] |  |  +- org.htmlunit:htmlunit-websocket-client:jar:4.6.0:compile,connection_issue,19933
2544,DEBUG,connection_issue,2,True,2025-07-23T15:09:00.501+01:00 DEBUG 1224 --- [databaseTest] [           main] com.zaxxer.hikari.HikariConfig           : validationTimeout...............5000,connection_issue,2544
12248,UNKNOWN,connection_issue,2,True,import org.springframework.security.config.annotation.web.socket.EnableWebSocketSecurity;,connection_issue,12248
13199,UNKNOWN,connection_issue,2,True,public CustomPGClient(final CustomPGConnectionDetails customPGConnectionDetails) {,connection_issue,13199
20284,DEBUG,connection_issue,2,True,"DEBUG 3733950 - o.apac.hc.clie.http.wire                                     : http-outgoing-0 >> """"Connection: keep-alive[\r][\n]""""",connection_issue,20284
4606,UNKNOWN,connection_issue,2,True,"2025-07-25T01:37:06.505234,""Message    : Connection to localhost:5432 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.",connection_issue,4606
7636,UNKNOWN,connection_issue,2,True,httpClientBuilder.connectTimeout(Duration.ofMinutes(10));,connection_issue,7636
1695,UNKNOWN,connection_issue,2,True,"2025-07-25T00:04:30.337981,@sadaaithal I'd rather not wrap that one if we don't need to. It's interesting that it doesn't seem to cause the same issues.,unknown,github_issue,spring-projects/spring-boot,46401,Executable JAR application class encounters performance issues when used with Palo Alto Network Cortex XDR agent,https://github.com/spring-projects/spring-boot/issues/46401",connection_issue,1695
2565,DEBUG,connection_issue,2,True,2025-07-23T15:09:01.925+01:00 DEBUG 1224 --- [databaseTest] [onnection-adder] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@5175e886,connection_issue,2565
7531,UNKNOWN,connection_issue,2,True,"2025-07-25T00:16:43.484678,""I will create PR in Spring Framework itself - sorry, I did not checked originator dependnecy and thought that it come from Boot."",unknown,github_issue,spring-projects/spring-boot,45789,Unable to customize RestTemplateBuilder with connectionTimeout when requestFactory used,https://github.com/spring-projects/spring-boot/issues/45789",connection_issue,7531
1795,UNKNOWN,connection_issue,2,True,"2025-07-25T00:05:14.696737,> won't have an opportunity to apply them. We can still look at other ways of,unknown,github_issue,spring-projects/spring-boot,46365,Make it possible to inject desired subclass of ActiveMQConnectionFactory into the configuration,https://github.com/spring-projects/spring-boot/issues/46365",connection_issue,1795
2578,DEBUG,connection_issue,2,True,2025-07-23T15:09:02.140+01:00 DEBUG 1224 --- [databaseTest] [onnection-adder] com.zaxxer.hikari.pool.PoolBase          : HikariPool-1 - Established new connection (5e63014a-1b2e-41ec-946a-aef813a33000),connection_issue,2578
